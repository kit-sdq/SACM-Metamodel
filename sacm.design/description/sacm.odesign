<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="sacm" version="12.0.0.2017041100">
  <ownedViewpoints name="Argumentation">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ArgumentationDiagram" label="Argumentation Diagram" domainClass="ArgumentPackage" enablePopupBars="true">
      <metamodel href="http://www.omg.org/sacm/2.1#/"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//argumentation"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//artifact_"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//package"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//terminology_"/>
      <defaultLayer name="Default">
        <nodeMappings name="Claim" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editClaim']" semanticCandidatesExpression="feature:eContents" domainClass="argumentation::Claim">
          <style xsi:type="style:BundledImageDescription" labelSize="12" labelExpression="aql:self.content.value->first().content" labelPosition="node">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::asserted and self.isAbstract">
            <style xsi:type="style:SquareDescription" borderLineStyle="dash" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" labelPosition="node" width="23" height="14">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::assumed and self.isAbstract">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/abstractAssumedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::needsSupport and self.isAbstract">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/abstractNeedsSupportClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::axiomatic and self.isAbstract">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/abstractAxiomaticClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::defeated and self.isAbstract">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/abstractDefeatedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::asCited and self.isAbstract">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/abstractAsCitedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::asserted">
            <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" labelPosition="node" width="23" height="14">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::assumed">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/assumedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::needsSupport">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/needsSupportClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::axiomatic">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/axiomaticClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::defeated">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/defeatedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::asCited">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/asCitedClaim.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="AssertedRelationship" semanticCandidatesExpression="feature:eContents" domainClass="AssertedRelationship">
          <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::needsSupport">
            <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::assumed">
            <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::axiomatic">
            <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::defeated">
            <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.assertionDeclaration = argumentation::AssertionDeclaration::asCited">
            <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="feature:gid" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="3">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="ArtifactReference" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editClaim']" semanticCandidatesExpression="feature:eContents" domainClass="ArtifactReference">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/artifactReference.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ArgumentReasoning" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editClaim']" semanticCandidatesExpression="feature:eContents" domainClass="argumentation::ArgumentReasoning">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.content.value->first().content" sizeComputationExpression="-1" labelPosition="node" workspacePath="/sacm.design/images/argumentReasoning.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="AssertedRelationshipToTarget" deletionDescription="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Remove%20Target']" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArtifactReference'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']" targetFinderExpression="feature:target" reconnections="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ReconnectTarget']">
          <style targetArrow="FillDiamond" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="AssertedRelationshipFromSource" deletionDescription="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='RemoveSource']" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArtifactReference'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" targetFinderExpression="aql:self.eContainer().eContents()->select(s|s.oclIsKindOf(argumentation::AssertedRelationship))->select(s|s.source->includes(self))" reconnections="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ReconnectSource']">
          <style targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:view.targetNode.oclAsType(diagram::DNode).target.oclAsType(argumentation::AssertedRelationship).isAbstract">
            <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="MetaClaim" deletionDescription="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='RemoveMetaClaim']" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim']" targetFinderExpression="feature:metaClaim">
          <style sourceArrow="OutputClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArgumentReasoningEdge" deletionDescription="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='RemoveArgumentReasoningEdge']" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']" targetFinderExpression="feature:reasoning">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" centeredTargetMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Model Elements Creation">
          <ownedTools xsi:type="tool:NodeCreationDescription" documentation="Create a new claim" name="Claim" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim']" iconPath="/sacm.design/images/icons/Claim.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::Claim" referenceName="argumentationElement" variableName="claim">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:claim">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="MultiLangString" referenceName="content" variableName="multiLangString">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:multiLangString">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="value" variableName="langString">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:langString">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="Statement"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="New Artifact Reference" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArtifactReference']" iconPath="/sacm.design/images/icons/ArtifactReference.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::ArtifactReference" referenceName="argumentationElement" variableName="ref">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:ref">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="MultiLangString" referenceName="content" variableName="multiLangString">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:multiLangString">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="value" variableName="langString">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:langString">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="Artifact Reference"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="New Argument Reasoning" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']" iconPath="/sacm.design/images/icons/ArgumentReasoning.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::ArgumentReasoning" referenceName="argumentationElement" variableName="ref">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:ref">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="MultiLangString" referenceName="content" variableName="multiLangString">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:multiLangString">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="value" variableName="langString">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:langString">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="Argument Reasoning"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="AssertedInference" label="New Asserted Inference" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" iconPath="/sacm.design/images/icons/ArrowDecorator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::AssertedInference" referenceName="argumentationElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="AssertedEvidence" label="New Asserted Evidence" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" iconPath="/sacm.design/images/icons/ArrowDecorator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::AssertedEvidence" referenceName="argumentationElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="AssertedContext" label="New Asserted Context" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" iconPath="/sacm.design/images/icons/SquareArrowDecorator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::AssertedContext" referenceName="argumentationElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="AssertedArtifactSupport" label="New Asserted Artifact Support" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" iconPath="/sacm.design/images/icons/ArrowDecorator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::AssertedArtifactSupport" referenceName="argumentationElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="AssertedArtifactContext" label="New Asserted Artifact Context" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='AssertedRelationship']" iconPath="/sacm.design/images/icons/NoDecorator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::AssertedArtifactContext" referenceName="argumentationElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="editClaim">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.content.value->first()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="xxx"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="var:0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="AssertedRelationship Tools" label="Asserted Relationships">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="SetTarget" label="Set Target" edgeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipToTarget']" iconPath="/sacm.design/images/icons/SetTarget.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="aql:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="AddSource" label="Add Source" edgeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipToTarget']" iconPath="/sacm.design/images/icons/SetSource.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="aql:self.source->including(target)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="MetaClaim" label="Set MetaClaim" edgeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='MetaClaim']" iconPath="/sacm.design/images/icons/SetMetaClaim.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="metaClaim" valueExpression="aql:self.metaClaim->including(target)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Set Reasoning" edgeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='ArgumentReasoningEdge']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="reasoning" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Remove Target">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="RemoveSource">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:elementView">
                <subModelOperations xsi:type="tool_1:Let" variableName="targetInstance" valueExpression="aql:self.extractTarget(elementView.targetNode)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:targetInstance">
                    <subModelOperations xsi:type="tool_1:Let" valueExpression="aql:self.removeFromSources(element)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="RemoveMetaClaim">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Let" valueExpression="aql:self.removeFromReasoning(self.extractTarget(elementView.targetNode))"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="RemoveArgumentReasoningEdge">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Let" valueExpression="aql:self.removeFromMetaClaim(self.extractTarget(elementView.targetNode))"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectTarget">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectSource">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:elementView">
                <subModelOperations xsi:type="tool_1:Let" variableName="sourceInstance" valueExpression="aql:self.extractSource(self.targetNode).oclAsType(argumentation::Claim)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:Let" valueExpression="aql:self.removeFromSources(source)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="aql:self.source->including(target)"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="Import">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="ImportLibrary" label="Import from Libraray" candidatesExpression="aql:self.selectAndQueryInstance()" multiple="true" message="Select Elements to import">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="copies" valueExpression="aql:self.copySelectedElements(element)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="ImportPackage" label="Import from Package" candidatesExpression="aql:self.getAllPackageContents()" multiple="true" tree="true" rootExpression="aql:self.getAllPackageContents()->filter(argumentation::ArgumentPackage)" childrenExpression="aql:self.eContents()" message="Select Elements to import">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="copies" valueExpression="aql:self.copySelectedElements(element)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="AddToGroup" label="Add to Group" candidatesExpression="aql:container.eContents()->filter(argumentation::ArgumentGroup)">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="Create new ArgumentationGroup">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                <subModelOperations xsi:type="properties:WizardModelOperation" windowTitleExpression="Select elements to add to the new group">
                  <pages name="SelectGroup" domainClass="argumentation::ArgumentGroup" semanticCandidateExpression="aql:self.eContents()"/>
                  <initialOperation/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="ID" position="NORTH_WEST" imageExpression="aql:if (self.assertionDeclaration == argumentation::AssertionDeclaration::asCited) then self.renderTextLabel(self.gid.first(4).concat('..')) else self.renderTextLabel(self.gid.first(8).concat('..')) endif" tooltipExpression="feature:gid" mappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArtifactReference'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='ArgumentReasoning']"/>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="CitedID" position="NORTH" preconditionExpression="aql:self.assertionDeclaration == argumentation::AssertionDeclaration::asCited" imageExpression="aql:if(self.isCitation) then self.renderTextLabel(self.citedElement.eContainer().gid.first(8).concat('..') + ' [' + self.citedElement.gid.first(8).concat('..') + ']') else self.renderTextLabel('Cited Package [Cited ID]') endif" tooltipExpression="Cited Package [Cited ID]" mappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@nodeMappings[name='Claim']"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(argumentation::AssertedRelationship) and self.oclAsType(argumentation::AssertedRelationship).isAbstract">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipFromSource']/@style //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipToTarget']/@style" attributeName="lineStyle" value="dash"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(argumentation::AssertedInference) or self.oclIsKindOf(argumentation::AssertedEvidence) or self.oclIsKindOf(argumentation::AssertedArtifactSupport)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipToTarget']/@style" attributeName="targetArrow" value="InputFillClosedArrow"/>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclIsKindOf(argumentation::AssertedContext) or self.oclIsKindOf(argumentation::AssertedArtifactContext)">
            <featureCustomizations xsi:type="description:EAttributeCustomization" appliedOn="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='ArgumentationDiagram']/@defaultLayer/@edgeMappings[name='AssertedRelationshipToTarget']/@style" attributeName="targetArrow" value="FillDiamond"/>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="AssuranceCaseDiagram" label="AssuranceCase Diagram" domainClass="AssuranceCasePackage" enablePopupBars="true">
      <metamodel href="http://www.omg.org/sacm/2.1#/"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//argumentation"/>
      <metamodel href="http://www.omg.org/sacm/2.1#//package"/>
      <defaultLayer name="Default">
        <nodeMappings name="ArgumentPackage" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editPackageName']" semanticCandidatesExpression="aql:self.argumentPackage->reject(p | not p.oclIsTypeOf(argumentation::ArgumentPackage))" domainClass="argumentation::ArgumentPackage">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.name.content" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/sacm.design/images/packages/ArgumentPackage.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ArgumentPackageInterface" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editPackageName']" domainClass="argumentation::ArgumentPackageInterface">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.name.content" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/sacm.design/images/packages/ArgumentPackageInterface.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="ArgumentPackageBinding" labelDirectEdit="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='editPackageName']" domainClass="argumentation::ArgumentPackageBinding">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.name.content" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/sacm.design/images/packages/ArgumentPackageBinding.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="BindingEdge" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageBinding']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackage'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageBinding'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageInterface']" targetFinderExpression="feature:participantPackage">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ImplementsEdge" sourceMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageInterface']" targetMapping="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackage']" targetFinderExpression="feature:implements">
          <style sourceArrow="InputArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="implements">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Package Tools">
          <ownedTools xsi:type="tool:DirectEditLabel" name="editPackageName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.name">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="var:0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ArgumentPackage" label="Create ArgumentPackage" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackage']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::ArgumentPackage" referenceName="argumentPackage" variableName="package">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:package">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="name" variableName="string">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:string">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="ArgumentPackage"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ArgumentPackageBinding" label="Create ArgumentPackageBinding" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageBinding']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::ArgumentPackageBinding" referenceName="argumentPackage" variableName="package">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:package">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="name" variableName="string">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:string">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="ArgumentPackageBinding"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ArgumentPackageInterface" label="Create ArgumentPackageInterface" nodeMappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageInterface']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="argumentation::ArgumentPackageInterface" referenceName="argumentPackage" variableName="package">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:package">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="sacm::LangString" referenceName="name" variableName="string">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:string">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="lang" valueExpression="en"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="content" valueExpression="ArgumentPackageInterface"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="ID" position="NORTH_WEST" imageExpression="aql:self.renderTextLabel(self.gid.first(8).concat('..'))" tooltipExpression="feature:gid" mappings="//@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackage'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageBinding'] //@ownedViewpoints[name='Argumentation']/@ownedRepresentations[name='AssuranceCaseDiagram']/@defaultLayer/@nodeMappings[name='ArgumentPackageInterface']"/>
        </decorationDescriptionsSet>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="sacm.design.Services"/>
  </ownedViewpoints>
</description:Group>
